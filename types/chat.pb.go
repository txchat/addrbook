// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: chat.proto

package types

import (
	context "context"
	types "github.com/33cn/chain33/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Sign 签名
type Sign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`  //公钥
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`  //数字签名
	AddressID int32  `protobuf:"varint,3,opt,name=AddressID,proto3" json:"AddressID,omitempty"` //签名地址类型
}

func (x *Sign) Reset() {
	*x = Sign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sign) ProtoMessage() {}

func (x *Sign) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sign.ProtoReflect.Descriptor instead.
func (*Sign) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Sign) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Sign) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Sign) GetAddressID() int32 {
	if x != nil {
		return x.AddressID
	}
	return 0
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddress   string   `protobuf:"bytes,1,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
	FriendAddress string   `protobuf:"bytes,2,opt,name=friendAddress,proto3" json:"friendAddress,omitempty"`
	CreateTime    int64    `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Groups        []string `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *Friend) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

func (x *Friend) GetFriendAddress() string {
	if x != nil {
		return x.FriendAddress
	}
	return ""
}

func (x *Friend) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Friend) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Black struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddress   string `protobuf:"bytes,1,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
	TargetAddress string `protobuf:"bytes,2,opt,name=targetAddress,proto3" json:"targetAddress,omitempty"`
	CreateTime    int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *Black) Reset() {
	*x = Black{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Black) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Black) ProtoMessage() {}

func (x *Black) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Black.ProtoReflect.Descriptor instead.
func (*Black) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *Black) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

func (x *Black) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *Black) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ChatAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*ChatAction_Update
	//	*ChatAction_Black
	//	*ChatAction_UpdateUser
	//	*ChatAction_UpdateServerGroup
	Value isChatAction_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,10,opt,name=ty,proto3" json:"ty,omitempty"`
}

func (x *ChatAction) Reset() {
	*x = ChatAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAction) ProtoMessage() {}

func (x *ChatAction) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAction.ProtoReflect.Descriptor instead.
func (*ChatAction) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (m *ChatAction) GetValue() isChatAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ChatAction) GetUpdate() *UpdateFriends {
	if x, ok := x.GetValue().(*ChatAction_Update); ok {
		return x.Update
	}
	return nil
}

func (x *ChatAction) GetBlack() *UpdateBlackList {
	if x, ok := x.GetValue().(*ChatAction_Black); ok {
		return x.Black
	}
	return nil
}

func (x *ChatAction) GetUpdateUser() *UpdateFields {
	if x, ok := x.GetValue().(*ChatAction_UpdateUser); ok {
		return x.UpdateUser
	}
	return nil
}

func (x *ChatAction) GetUpdateServerGroup() *UpdateServerGroups {
	if x, ok := x.GetValue().(*ChatAction_UpdateServerGroup); ok {
		return x.UpdateServerGroup
	}
	return nil
}

func (x *ChatAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isChatAction_Value interface {
	isChatAction_Value()
}

type ChatAction_Update struct {
	Update *UpdateFriends `protobuf:"bytes,1,opt,name=update,proto3,oneof"`
}

type ChatAction_Black struct {
	Black *UpdateBlackList `protobuf:"bytes,2,opt,name=black,proto3,oneof"`
}

type ChatAction_UpdateUser struct {
	UpdateUser *UpdateFields `protobuf:"bytes,3,opt,name=updateUser,proto3,oneof"`
}

type ChatAction_UpdateServerGroup struct {
	UpdateServerGroup *UpdateServerGroups `protobuf:"bytes,4,opt,name=updateServerGroup,proto3,oneof"`
}

func (*ChatAction_Update) isChatAction_Value() {}

func (*ChatAction_Black) isChatAction_Value() {}

func (*ChatAction_UpdateUser) isChatAction_Value() {}

func (*ChatAction_UpdateServerGroup) isChatAction_Value() {}

//查询好友列表
type ReqGetFriends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddress string `protobuf:"bytes,1,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
	Count       int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Index       string `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
	Time        int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	Sign        *Sign  `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *ReqGetFriends) Reset() {
	*x = ReqGetFriends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetFriends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetFriends) ProtoMessage() {}

func (x *ReqGetFriends) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetFriends.ProtoReflect.Descriptor instead.
func (*ReqGetFriends) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ReqGetFriends) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

func (x *ReqGetFriends) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqGetFriends) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *ReqGetFriends) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqGetFriends) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

type ReplyGetFriends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*Friend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *ReplyGetFriends) Reset() {
	*x = ReplyGetFriends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetFriends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetFriends) ProtoMessage() {}

func (x *ReplyGetFriends) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetFriends.ProtoReflect.Descriptor instead.
func (*ReplyGetFriends) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *ReplyGetFriends) GetFriends() []*Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

//更新好友列表
type ReqUpdateFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendAddress string   `protobuf:"bytes,1,opt,name=friendAddress,proto3" json:"friendAddress,omitempty"`
	Type          int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Groups        []string `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ReqUpdateFriend) Reset() {
	*x = ReqUpdateFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateFriend) ProtoMessage() {}

func (x *ReqUpdateFriend) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateFriend.ProtoReflect.Descriptor instead.
func (*ReqUpdateFriend) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ReqUpdateFriend) GetFriendAddress() string {
	if x != nil {
		return x.FriendAddress
	}
	return ""
}

func (x *ReqUpdateFriend) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqUpdateFriend) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type UpdateFriends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*ReqUpdateFriend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *UpdateFriends) Reset() {
	*x = UpdateFriends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriends) ProtoMessage() {}

func (x *UpdateFriends) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriends.ProtoReflect.Descriptor instead.
func (*UpdateFriends) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateFriends) GetFriends() []*ReqUpdateFriend {
	if x != nil {
		return x.Friends
	}
	return nil
}

//查询黑名单列表
type ReqGetBlackList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddress string `protobuf:"bytes,1,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
	Count       int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Index       string `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
	Time        int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	Sign        *Sign  `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *ReqGetBlackList) Reset() {
	*x = ReqGetBlackList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetBlackList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetBlackList) ProtoMessage() {}

func (x *ReqGetBlackList) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetBlackList.ProtoReflect.Descriptor instead.
func (*ReqGetBlackList) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{8}
}

func (x *ReqGetBlackList) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

func (x *ReqGetBlackList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqGetBlackList) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *ReqGetBlackList) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqGetBlackList) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

type ReplyGetBlackList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Black `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ReplyGetBlackList) Reset() {
	*x = ReplyGetBlackList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetBlackList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetBlackList) ProtoMessage() {}

func (x *ReplyGetBlackList) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetBlackList.ProtoReflect.Descriptor instead.
func (*ReplyGetBlackList) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{9}
}

func (x *ReplyGetBlackList) GetList() []*Black {
	if x != nil {
		return x.List
	}
	return nil
}

//更新黑名单请求
type ReqUpdateBlackList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAddress string `protobuf:"bytes,1,opt,name=targetAddress,proto3" json:"targetAddress,omitempty"`
	Type          int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReqUpdateBlackList) Reset() {
	*x = ReqUpdateBlackList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateBlackList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateBlackList) ProtoMessage() {}

func (x *ReqUpdateBlackList) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateBlackList.ProtoReflect.Descriptor instead.
func (*ReqUpdateBlackList) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{10}
}

func (x *ReqUpdateBlackList) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *ReqUpdateBlackList) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type UpdateBlackList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ReqUpdateBlackList `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UpdateBlackList) Reset() {
	*x = UpdateBlackList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlackList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlackList) ProtoMessage() {}

func (x *UpdateBlackList) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlackList.ProtoReflect.Descriptor instead.
func (*UpdateBlackList) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateBlackList) GetList() []*ReqUpdateBlackList {
	if x != nil {
		return x.List
	}
	return nil
}

//------------------------user info----------------//
type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddress string `protobuf:"bytes,1,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value       string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Level       string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{12}
}

func (x *Field) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Field) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

//查询用户信息
type ReqGetUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddress   string `protobuf:"bytes,1,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
	TargetAddress string `protobuf:"bytes,2,opt,name=targetAddress,proto3" json:"targetAddress,omitempty"`
	Count         int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Index         string `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
	Time          int64  `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Sign          *Sign  `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *ReqGetUser) Reset() {
	*x = ReqGetUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetUser) ProtoMessage() {}

func (x *ReqGetUser) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetUser.ProtoReflect.Descriptor instead.
func (*ReqGetUser) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{13}
}

func (x *ReqGetUser) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

func (x *ReqGetUser) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *ReqGetUser) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqGetUser) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *ReqGetUser) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqGetUser) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

type ReplyGetField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Level string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *ReplyGetField) Reset() {
	*x = ReplyGetField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetField) ProtoMessage() {}

func (x *ReplyGetField) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetField.ProtoReflect.Descriptor instead.
func (*ReplyGetField) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{14}
}

func (x *ReplyGetField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReplyGetField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReplyGetField) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type ReplyGetUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatServers []*ReplyServerInfo `protobuf:"bytes,1,rep,name=chatServers,proto3" json:"chatServers,omitempty"`
	Fields      []*ReplyGetField   `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Groups      []string           `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ReplyGetUser) Reset() {
	*x = ReplyGetUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetUser) ProtoMessage() {}

func (x *ReplyGetUser) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetUser.ProtoReflect.Descriptor instead.
func (*ReplyGetUser) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{15}
}

func (x *ReplyGetUser) GetChatServers() []*ReplyServerInfo {
	if x != nil {
		return x.ChatServers
	}
	return nil
}

func (x *ReplyGetUser) GetFields() []*ReplyGetField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ReplyGetUser) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

//更新好友列表
type ReqUpdateField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type  int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Level string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *ReqUpdateField) Reset() {
	*x = ReqUpdateField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateField) ProtoMessage() {}

func (x *ReqUpdateField) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateField.ProtoReflect.Descriptor instead.
func (*ReqUpdateField) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{16}
}

func (x *ReqUpdateField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqUpdateField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReqUpdateField) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqUpdateField) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type UpdateFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*ReqUpdateField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *UpdateFields) Reset() {
	*x = UpdateFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFields) ProtoMessage() {}

func (x *UpdateFields) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFields.ProtoReflect.Descriptor instead.
func (*UpdateFields) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateFields) GetFields() []*ReqUpdateField {
	if x != nil {
		return x.Fields
	}
	return nil
}

//--------------------------server groups-------------------------//
type ServerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value       string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	MainAddress string `protobuf:"bytes,4,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
}

func (x *ServerGroup) Reset() {
	*x = ServerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGroup) ProtoMessage() {}

func (x *ServerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGroup.ProtoReflect.Descriptor instead.
func (*ServerGroup) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{18}
}

func (x *ServerGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServerGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerGroup) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ServerGroup) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

type UpdateServerGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*ReqUpdateServerGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *UpdateServerGroups) Reset() {
	*x = UpdateServerGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerGroups) ProtoMessage() {}

func (x *UpdateServerGroups) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerGroups.ProtoReflect.Descriptor instead.
func (*UpdateServerGroups) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateServerGroups) GetGroups() []*ReqUpdateServerGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

//server groups request
//查询分组信息
type ReqGetServerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddress string `protobuf:"bytes,1,opt,name=mainAddress,proto3" json:"mainAddress,omitempty"`
	Count       int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Index       string `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
	Time        int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	Sign        *Sign  `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *ReqGetServerGroup) Reset() {
	*x = ReqGetServerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetServerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetServerGroup) ProtoMessage() {}

func (x *ReqGetServerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetServerGroup.ProtoReflect.Descriptor instead.
func (*ReqGetServerGroup) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{20}
}

func (x *ReqGetServerGroup) GetMainAddress() string {
	if x != nil {
		return x.MainAddress
	}
	return ""
}

func (x *ReqGetServerGroup) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqGetServerGroup) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *ReqGetServerGroup) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqGetServerGroup) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

type ReqUpdateServerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Type  int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReqUpdateServerGroup) Reset() {
	*x = ReqUpdateServerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateServerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateServerGroup) ProtoMessage() {}

func (x *ReqUpdateServerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateServerGroup.ProtoReflect.Descriptor instead.
func (*ReqUpdateServerGroup) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{21}
}

func (x *ReqUpdateServerGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReqUpdateServerGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqUpdateServerGroup) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReqUpdateServerGroup) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ReplyServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ReplyServerInfo) Reset() {
	*x = ReplyServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyServerInfo) ProtoMessage() {}

func (x *ReplyServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyServerInfo.ProtoReflect.Descriptor instead.
func (*ReplyServerInfo) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{22}
}

func (x *ReplyServerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReplyServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReplyServerInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

//server groups reply
type ReplyGetServerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ReplyGetServerGroup) Reset() {
	*x = ReplyGetServerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetServerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetServerGroup) ProtoMessage() {}

func (x *ReplyGetServerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetServerGroup.ProtoReflect.Descriptor instead.
func (*ReplyGetServerGroup) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{23}
}

func (x *ReplyGetServerGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReplyGetServerGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReplyGetServerGroup) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ReplyGetServerGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*ReplyGetServerGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ReplyGetServerGroups) Reset() {
	*x = ReplyGetServerGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetServerGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetServerGroups) ProtoMessage() {}

func (x *ReplyGetServerGroups) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetServerGroups.ProtoReflect.Descriptor instead.
func (*ReplyGetServerGroups) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{24}
}

func (x *ReplyGetServerGroups) GetGroups() []*ReplyGetServerGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x44, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x6f, 0x0a, 0x05, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x12, 0x35, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x11, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x22, 0x3a, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22,
	0x63, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x22, 0x41, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x35,
	0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0xb5, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x4f, 0x0a, 0x0d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x8e, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x64, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x3d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0x69, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x49, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x22, 0x64, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4f, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x32, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x32, 0xe8, 0x03, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x1a, 0x0f, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x05, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x54, 0x78, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x0f, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x1a, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x33, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x13, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x1a, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x00, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_chat_proto_goTypes = []interface{}{
	(*Sign)(nil),                 // 0: types.Sign
	(*Friend)(nil),               // 1: types.Friend
	(*Black)(nil),                // 2: types.Black
	(*ChatAction)(nil),           // 3: types.ChatAction
	(*ReqGetFriends)(nil),        // 4: types.ReqGetFriends
	(*ReplyGetFriends)(nil),      // 5: types.ReplyGetFriends
	(*ReqUpdateFriend)(nil),      // 6: types.ReqUpdateFriend
	(*UpdateFriends)(nil),        // 7: types.UpdateFriends
	(*ReqGetBlackList)(nil),      // 8: types.ReqGetBlackList
	(*ReplyGetBlackList)(nil),    // 9: types.ReplyGetBlackList
	(*ReqUpdateBlackList)(nil),   // 10: types.ReqUpdateBlackList
	(*UpdateBlackList)(nil),      // 11: types.UpdateBlackList
	(*Field)(nil),                // 12: types.Field
	(*ReqGetUser)(nil),           // 13: types.ReqGetUser
	(*ReplyGetField)(nil),        // 14: types.ReplyGetField
	(*ReplyGetUser)(nil),         // 15: types.ReplyGetUser
	(*ReqUpdateField)(nil),       // 16: types.ReqUpdateField
	(*UpdateFields)(nil),         // 17: types.UpdateFields
	(*ServerGroup)(nil),          // 18: types.ServerGroup
	(*UpdateServerGroups)(nil),   // 19: types.UpdateServerGroups
	(*ReqGetServerGroup)(nil),    // 20: types.ReqGetServerGroup
	(*ReqUpdateServerGroup)(nil), // 21: types.ReqUpdateServerGroup
	(*ReplyServerInfo)(nil),      // 22: types.ReplyServerInfo
	(*ReplyGetServerGroup)(nil),  // 23: types.ReplyGetServerGroup
	(*ReplyGetServerGroups)(nil), // 24: types.ReplyGetServerGroups
	(*types.UnsignTx)(nil),       // 25: types.UnsignTx
}
var file_chat_proto_depIdxs = []int32{
	7,  // 0: types.ChatAction.update:type_name -> types.UpdateFriends
	11, // 1: types.ChatAction.black:type_name -> types.UpdateBlackList
	17, // 2: types.ChatAction.updateUser:type_name -> types.UpdateFields
	19, // 3: types.ChatAction.updateServerGroup:type_name -> types.UpdateServerGroups
	0,  // 4: types.ReqGetFriends.sign:type_name -> types.Sign
	1,  // 5: types.ReplyGetFriends.friends:type_name -> types.Friend
	6,  // 6: types.UpdateFriends.friends:type_name -> types.ReqUpdateFriend
	0,  // 7: types.ReqGetBlackList.sign:type_name -> types.Sign
	2,  // 8: types.ReplyGetBlackList.list:type_name -> types.Black
	10, // 9: types.UpdateBlackList.list:type_name -> types.ReqUpdateBlackList
	0,  // 10: types.ReqGetUser.sign:type_name -> types.Sign
	22, // 11: types.ReplyGetUser.chatServers:type_name -> types.ReplyServerInfo
	14, // 12: types.ReplyGetUser.fields:type_name -> types.ReplyGetField
	16, // 13: types.UpdateFields.fields:type_name -> types.ReqUpdateField
	21, // 14: types.UpdateServerGroups.groups:type_name -> types.ReqUpdateServerGroup
	0,  // 15: types.ReqGetServerGroup.sign:type_name -> types.Sign
	23, // 16: types.ReplyGetServerGroups.groups:type_name -> types.ReplyGetServerGroup
	7,  // 17: types.chat.Update:input_type -> types.UpdateFriends
	11, // 18: types.chat.Black:input_type -> types.UpdateBlackList
	17, // 19: types.chat.UpdateUser:input_type -> types.UpdateFields
	19, // 20: types.chat.UpdateServerGroup:input_type -> types.UpdateServerGroups
	4,  // 21: types.chat.GetFriends:input_type -> types.ReqGetFriends
	8,  // 22: types.chat.GetBlackList:input_type -> types.ReqGetBlackList
	13, // 23: types.chat.GetUser:input_type -> types.ReqGetUser
	20, // 24: types.chat.GetServerGroup:input_type -> types.ReqGetServerGroup
	25, // 25: types.chat.Update:output_type -> types.UnsignTx
	25, // 26: types.chat.Black:output_type -> types.UnsignTx
	25, // 27: types.chat.UpdateUser:output_type -> types.UnsignTx
	25, // 28: types.chat.UpdateServerGroup:output_type -> types.UnsignTx
	5,  // 29: types.chat.GetFriends:output_type -> types.ReplyGetFriends
	9,  // 30: types.chat.GetBlackList:output_type -> types.ReplyGetBlackList
	15, // 31: types.chat.GetUser:output_type -> types.ReplyGetUser
	24, // 32: types.chat.GetServerGroup:output_type -> types.ReplyGetServerGroups
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Black); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetFriends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetFriends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetBlackList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetBlackList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateBlackList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlackList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetServerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateServerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetServerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetServerGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chat_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ChatAction_Update)(nil),
		(*ChatAction_Black)(nil),
		(*ChatAction_UpdateUser)(nil),
		(*ChatAction_UpdateServerGroup)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Update(ctx context.Context, in *UpdateFriends, opts ...grpc.CallOption) (*types.UnsignTx, error)
	Black(ctx context.Context, in *UpdateBlackList, opts ...grpc.CallOption) (*types.UnsignTx, error)
	UpdateUser(ctx context.Context, in *UpdateFields, opts ...grpc.CallOption) (*types.UnsignTx, error)
	UpdateServerGroup(ctx context.Context, in *UpdateServerGroups, opts ...grpc.CallOption) (*types.UnsignTx, error)
	GetFriends(ctx context.Context, in *ReqGetFriends, opts ...grpc.CallOption) (*ReplyGetFriends, error)
	GetBlackList(ctx context.Context, in *ReqGetBlackList, opts ...grpc.CallOption) (*ReplyGetBlackList, error)
	GetUser(ctx context.Context, in *ReqGetUser, opts ...grpc.CallOption) (*ReplyGetUser, error)
	GetServerGroup(ctx context.Context, in *ReqGetServerGroup, opts ...grpc.CallOption) (*ReplyGetServerGroups, error)
}

type chatClient struct {
	cc grpc.ClientConnInterface
}

func NewChatClient(cc grpc.ClientConnInterface) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Update(ctx context.Context, in *UpdateFriends, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.chat/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Black(ctx context.Context, in *UpdateBlackList, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.chat/Black", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) UpdateUser(ctx context.Context, in *UpdateFields, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.chat/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) UpdateServerGroup(ctx context.Context, in *UpdateServerGroups, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.chat/UpdateServerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetFriends(ctx context.Context, in *ReqGetFriends, opts ...grpc.CallOption) (*ReplyGetFriends, error) {
	out := new(ReplyGetFriends)
	err := c.cc.Invoke(ctx, "/types.chat/GetFriends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetBlackList(ctx context.Context, in *ReqGetBlackList, opts ...grpc.CallOption) (*ReplyGetBlackList, error) {
	out := new(ReplyGetBlackList)
	err := c.cc.Invoke(ctx, "/types.chat/GetBlackList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetUser(ctx context.Context, in *ReqGetUser, opts ...grpc.CallOption) (*ReplyGetUser, error) {
	out := new(ReplyGetUser)
	err := c.cc.Invoke(ctx, "/types.chat/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetServerGroup(ctx context.Context, in *ReqGetServerGroup, opts ...grpc.CallOption) (*ReplyGetServerGroups, error) {
	out := new(ReplyGetServerGroups)
	err := c.cc.Invoke(ctx, "/types.chat/GetServerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Update(context.Context, *UpdateFriends) (*types.UnsignTx, error)
	Black(context.Context, *UpdateBlackList) (*types.UnsignTx, error)
	UpdateUser(context.Context, *UpdateFields) (*types.UnsignTx, error)
	UpdateServerGroup(context.Context, *UpdateServerGroups) (*types.UnsignTx, error)
	GetFriends(context.Context, *ReqGetFriends) (*ReplyGetFriends, error)
	GetBlackList(context.Context, *ReqGetBlackList) (*ReplyGetBlackList, error)
	GetUser(context.Context, *ReqGetUser) (*ReplyGetUser, error)
	GetServerGroup(context.Context, *ReqGetServerGroup) (*ReplyGetServerGroups, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) Update(context.Context, *UpdateFriends) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedChatServer) Black(context.Context, *UpdateBlackList) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Black not implemented")
}
func (*UnimplementedChatServer) UpdateUser(context.Context, *UpdateFields) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedChatServer) UpdateServerGroup(context.Context, *UpdateServerGroups) (*types.UnsignTx, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServerGroup not implemented")
}
func (*UnimplementedChatServer) GetFriends(context.Context, *ReqGetFriends) (*ReplyGetFriends, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFriends not implemented")
}
func (*UnimplementedChatServer) GetBlackList(context.Context, *ReqGetBlackList) (*ReplyGetBlackList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlackList not implemented")
}
func (*UnimplementedChatServer) GetUser(context.Context, *ReqGetUser) (*ReplyGetUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedChatServer) GetServerGroup(context.Context, *ReqGetServerGroup) (*ReplyGetServerGroups, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerGroup not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFriends)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Update(ctx, req.(*UpdateFriends))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Black_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBlackList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Black(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/Black",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Black(ctx, req.(*UpdateBlackList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFields)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).UpdateUser(ctx, req.(*UpdateFields))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_UpdateServerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServerGroups)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).UpdateServerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/UpdateServerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).UpdateServerGroup(ctx, req.(*UpdateServerGroups))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetFriends)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/GetFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetFriends(ctx, req.(*ReqGetFriends))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetBlackList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetBlackList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetBlackList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/GetBlackList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetBlackList(ctx, req.(*ReqGetBlackList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetUser(ctx, req.(*ReqGetUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetServerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetServerGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetServerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.chat/GetServerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetServerGroup(ctx, req.(*ReqGetServerGroup))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _Chat_Update_Handler,
		},
		{
			MethodName: "Black",
			Handler:    _Chat_Black_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Chat_UpdateUser_Handler,
		},
		{
			MethodName: "UpdateServerGroup",
			Handler:    _Chat_UpdateServerGroup_Handler,
		},
		{
			MethodName: "GetFriends",
			Handler:    _Chat_GetFriends_Handler,
		},
		{
			MethodName: "GetBlackList",
			Handler:    _Chat_GetBlackList_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Chat_GetUser_Handler,
		},
		{
			MethodName: "GetServerGroup",
			Handler:    _Chat_GetServerGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}
